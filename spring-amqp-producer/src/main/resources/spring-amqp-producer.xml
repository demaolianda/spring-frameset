<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
	   http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="wangzhongqiu.spring.amqp"/>

    <import resource="classpath:spring-core.xml"/>

    <bean id="commonProducer" class="wangzhongqiu.spring.amqp.CommonProducer" name="commonProducer">
        <property name="routingKey" value="manual_direct_queue"/>
        <property name="baseAmqpTemplate" ref="directExChangeTemplate"/>
    </bean>

    <!-- 连接配置 -->
    <!--<rabbit:connection-factory id="mqConnectionFactory" host="${mq.host}"
                               username="${mq.username}"
                               password="${mq.password}"
                               port="${mq.port}"
                               virtual-host="${mq.vhost}"/>-->
    <!--带有confirm的连接配置-->
    <bean id="mqConnectionFactory"
          class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <property name="host" value="${mq.host}"/>
        <property name="port" value="${mq.port}"/>
        <property name="virtualHost" value="${mq.vhost}"/>
        <property name="username" value="${mq.username}"/>
        <property name="password" value="${mq.password}"/>
        <property name="publisherConfirms" value="true"/>
        <property name="publisherReturns" value="true"/>
    </bean>

    <rabbit:admin connection-factory="mqConnectionFactory"/>

    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>

    <!-- spring template声明-->
    <!-- exchange:指定交换机,填写名称,而不是定义的交换机的ID-->
    <!-- confirm-callback：消息确认监听器-->
    <!-- return-callback：消息发送失败返回监听器-->
    <!-- mandatory-expression：标志位，和return-callback配合使用必须设置为true-->
    <rabbit:template id="directExChangeTemplate"
                     exchange="direct-exchange"
                     connection-factory="mqConnectionFactory"
                     mandatory-expression="true"
                     confirm-callback="confirmCallBackListener"
                     return-callback="returnCallBackListener"
                     message-converter="jsonMessageConverter"/>
    <!-- 未指定 默认交换机 -->
    <!--DirectExchange是RabbitMQ Broker的默认Exchange，它有一个特别的属性对一些简单的应用来说是非常有用的，
    在使用这个类型的Exchange时，可以不必指定routing key的名字，在此类型下创建的Queue有一个默认的routing key，
    这个routing key一般同Queue同名。-->
    <rabbit:template id="noExChangeTemplate"
                     connection-factory="mqConnectionFactory"
                     message-converter="jsonMessageConverter"/>

    <!--交换机配置
      name="zf-direct-exchange",name是交换机的名称
      auto-delete:交换机使用完成自动删除
      durable：交换机持久化
    -->
    <!-- direct类型 交换机-->
    <rabbit:direct-exchange id="direct-exchange" name="direct-exchange" auto-delete="false" durable="true">
        <rabbit:bindings>
            <!-- queue 可以指定队列名称 或者指定id的队列,指定名称更为清晰-->
            <!-- 消息发送时的routingKey与key值做完全匹配-->
            <!--<rabbit:binding queue="queue1" key="zf_direct_queue"></rabbit:binding>-->
            <rabbit:binding queue="aa" key="auto_direct_queue"></rabbit:binding>
            <!-- 一个交换机绑定多个队列，key可以相同,可以不同-->
            <rabbit:binding queue="dd" key="manual_direct_queue"></rabbit:binding>
            <rabbit:binding queue="ee" key="manual_direct_queue_2"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- topic类型 交换机-->
    <rabbit:topic-exchange id="topic-exchange" name="topic-exchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <!-- 消息发送时的routingKey与pattern做模糊匹配
               *表示一个内容 不多不少,
               #表示0个或多个内容: topic.# 可以匹配topic.,topic.a,topic.b.c
               -->
            <rabbit:binding queue="cc" pattern="*.topic.*"></rabbit:binding>
            <rabbit:binding queue="dd" pattern="topic.#"></rabbit:binding>
            <rabbit:binding queue="ee" pattern="*.topic"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:topic-exchange>

    <!-- fanout 类型 交换机 -->
    <!-- 消息直接发送到所有绑定此交换机的队列中 -->
    <rabbit:fanout-exchange name="fanout-exchange" auto-delete="false" durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="aa"></rabbit:binding>
            <rabbit:binding queue="bb"></rabbit:binding>
            <rabbit:binding queue="ee"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!--死信队列:exchange和queue配置-->
    <rabbit:direct-exchange name="dead-letter-exchange"
                            durable="false" auto-delete="false" id="dead-letter-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="dead-letter-queue" key="dead-letter-queue"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!--消息队列配置
      name="aa",name是消息队列的名称,发送消息时是无法直接指定发送到哪个队列中的
      auto-delete:队列使用完成自动删除
      durable：队列持久化
      exclusive：排他性,如果设置,其他用户看不见,但是此用户链接断开后，rabbitmq会删除此队列，无视是否持久化
     -->
    <rabbit:queue durable="true" auto-delete="false" name="aa" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl">
                <value type="java.lang.Long">10000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="dead-letter-exchange"/>
            <entry key="x-dead-letter-routing-key" value="dead-letter-queue"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue durable="true" auto-delete="false" name="bb" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl">
                <value type="java.lang.Long">10000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="dead-letter-exchange"/>
            <entry key="x-dead-letter-routing-key" value="dead-letter-queue"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue durable="true" auto-delete="false" name="cc" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl">
                <value type="java.lang.Long">10000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="dead-letter-exchange"/>
            <entry key="x-dead-letter-routing-key" value="dead-letter-queue"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue durable="true" auto-delete="false" name="dd" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl">
                <value type="java.lang.Long">10000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="dead-letter-exchange"/>
            <entry key="x-dead-letter-routing-key" value="dead-letter-queue"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!--队列优先级-->
    <rabbit:queue durable="true" auto-delete="false" name="ee" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-max-priority">
                <value type="java.lang.Integer">10</value>
            </entry>
            <entry key="x-message-ttl">
                <value type="java.lang.Long">10000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="dead-letter-exchange"/>
            <entry key="x-dead-letter-routing-key" value="dead-letter-queue"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <rabbit:queue durable="true" auto-delete="false" name="dead-letter-queue" exclusive="false"/>
</beans>